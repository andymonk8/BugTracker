@model BugTracker.Models.Ticket

@using BugTracker.Services.Interfaces
@using BugTracker.Models.Enums
@using BugTracker.Models.ViewModels;

@inject IBTFileService BTFileService
@inject IBTTicketHistoryService _HistoryService

@{
	ViewData["Title"] = "Details";
}

<h1>Ticket Details</h1>

@if (User.IsInRole(nameof(BTRoles.Admin)) || (User.IsInRole(nameof(BTRoles.ProjectManager))))
{
	@if (Model.DeveloperUser != null)
	{
		<tr>
			<td class="card-text mt-3 font-weight-semibold"><strong>Assigned Developer:</strong> </td>
			<td>
				:
			</td>
			<td>
				@Model.DeveloperUser.FullName
			</td>
		</tr>
		<tr>
			<td>
				<a asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-ticketId="@Model.Id" class="btn btn-success">Change Developer</a>
			</td>
		</tr>
	}
	else
	{
		<tr>
			<td class="card-text mt-3 font-weight-semibold"><strong>Assigned Developer:</strong> </td>
			<td>
				:
			</td>
			<td>
				Unassigned
			</td>
		</tr>
		<tr>
			<td>
				<a asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-ticketId="@Model.Id" class="btn btn-success">Assign Developer</a>
			</td>
		</tr>
	}

}
else
{
	@if (Model.DeveloperUser != null)
	{
		<tr>
			<td class="card-text mt-3"><strong>Assigned Developer:</strong> </td>
			<td>
				:
			</td>
			<td>
				@Model.DeveloperUser.FullName
			</td>
		</tr>
	}
	else
	{
		<tr>
			<td class="card-text mt-3"><strong>Assigned Developer:</strong> </td>
			<td>
				:
			</td>
			<td>
				Unassigned
			</td>
		</tr>
	}
}

<div>
	<div classxfont-weighteighteightgetainer-fluid">
		<div class="row gy-2">
			<div class="col-md-12 col">
				<div class="row col-cols-2 mt-5 bg-secondary">
					<div class="card col m-1 p-2">
						<div class="card-body">
							@*Title of Ticket*@
							<h5>@Model.Title</h5>
							@*Description of Ticket*@
							<p>@Model.Description</p>
							<div class="progress-container progress-info m-b-25">
								@*Project Name and information*@
								<span class="progress-badge" style="font-size:small">Project: [Project Name]</span>
								<div class="progress">
									@*Progress bar logic*@
									@*Variable from razor logic*@
									<div class="progress-bar" role="progressbar" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100" style="width: [Percent]%;">
										@*Variable from razor logic*@
										<span class="progress-value">[Percent]%</span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="card col m-1 p-2">
						<div class="card-body">
							<ul class="list-unstyled">
								@*Ticket date*@
								<li><strong>Date Entered:</strong> <span class="">@Model.DateCreated</</span></li>
								@*Project end date*@
								<li><strong>Deadline:</strong> <span class="">  [Project End date]</</span></li>
								@*Ticket type*@
								<li><strong>Type:</strong> <span class="">@Model.TicketType</span></li>
								@*Ticket priority*@
								<li><strong>Priority:</strong> <span class="">@Model.TicketPriority</span></li>
								@*Ticket status*@
								<li><strong>Status:</strong> <span class="">@Model.TicketStatus</span></li>
							</ul>
						</div>
					</div>
				</div>
			</div>
			<div class="col-md-8 col col-cols-2 mt-5 ">
				<div class="col">
					<div class="bg-secondary">
						<div class="card m-1 p-2">
							<div class="card-header">
								<h2>Comments</h2>
							</div>
							<div class="card-body" style="overflow-y:auto;height:600px;">

								@*Form and Logic for authorized users to add comments*@

								<div class="axil-comment-area">

								<div class="comment-respond">
									<h4 class="title">Post a comment</h4>
									<form asp-action="AddTicketComment" asp-controller="Tickets" enctype="multipart/form-data" method="post">
										<div asp-validation-summary="ModelOnly" class="text-danger"></div>
										<input type="hidden" asp-for="@Model.Id" name="TicketId">
										@*<input type="hidden" name="BlogPostId" value="@Model.Id">*@
										@*<input type="hidden" asp-for="Slug">*@
										<div class="row row--10">

											<div class="col-12">
												<div class="form-group">
													<label for="message">Leave a Comment</label>
													<textarea class="w-100" name="Comment" rows="3" id="message"></textarea>
												</div>
											</div>

											<div class="col-lg-12">
												<div class="form-submit cerchio">
													<input type="submit" class="axil-button button-rounded" value="Post Comment">
												</div>
											</div>
										</div>
									</form>
								</div>

								<hr />
								<h6>Comments</h6>
								@*<ul class="right_chat list-unstyled mb-0">*@
									@*Loop to show comments made for the Ticket*@

									<div class="axil-comment-area">
										<h4 class="title">@Model.Comments.Count() comments</h4>
										<ul class="comment-list">

									@foreach (TicketComment ticketComment in Model.Comments)
								{
									<!-- Start Single Comment  -->
									<li class="comment">
										<div class="comment-body">
											<div class="single-comment">
												<div class="comment-img">
													<img src="@BTFileService.ConvertByteArrayToFile(ticketComment.User?.ImageData!,ticketComment.User?.ImageType!,(int)DefaultImage.BTUserImage)" alt="Author Images" style="max-width: 80px;">
												</div>
												<div class="comment-inner">
													<h6 class="commenter">
														<a class="hover-flip-item-wrapper" href="#">
															<span class="hover-flip-item">
																<span data-text="@ticketComment.User?.FullName">@ticketComment.User?.FullName</span>
															</span>
														</a>
													</h6>
													<div class="comment-meta">
														<div class="time-spent">@ticketComment.DateCreated.ToString("MMM dd, yyyy - hh:mm tt")</div>
													</div>
													<div class="comment-text">
														<p class="b2">@Html.Raw(ticketComment.Comment)</p>
													</div>
												</div>
											</div>
										</div>
									</li>
								<!-- End Single Comment  -->
								}

										</ul>
									</div>

								</div>

								@*</ul>*@
							</div>
							<div class="card-footer">
							</div>
						</div>
					</div>
				</div>
				<div class="col">
					<div class="bg-secondary">
						<div class="card m-1 p-2">
							<div class="card-header">
								<h2>Attachments</h2>
							</div>
							<div class="card-body" style="overflow-y:auto;height:300px;">

								@* Refer to the Ticket Attachments document for this section *@

								@* Ticket attachments part 1 here *@
								<div class="row clearfix">
									<div>
										<form asp-action="AddTicketAttachment" asp-controller="Tickets" enctype="multipart/form-data" method="post">
											<div asp-validation-summary="ModelOnly" class="text-danger"></div>
											<input type="hidden" asp-for="@Model.Id" name="TicketId">
											<div class="media-body ml-3">
												<label>
													Description
													<input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control" />
												</label><br />
												<label class="btn btn-outline-primary btn-sm">
													<input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" class="form-control-file" />
												</label>
												<button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat">Submit</button>
											</div>
										</form>
									</div>
								</div>

								@* Ticket attachments part 2 here *@
								<hr />
								<h6>Attachments</h6>
								<div class="container">
									<div class="row">
										@foreach (TicketAttachment item in Model.Attachments)
										{
											<div class="col col-sm-2">
												<a asp-action="ShowFile" asp-controller="Tickets" asp-route-Id="@item.Id">
													<div class="icon">
														<img src="@BTFileService.GetFileIcon(item.FileName!)" style="height:50px;width:50px" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="@item.FileName" />
													</div>
												</a>
												<div style="font-size:x-small">
													<div class="file-name">
														<strong>@item.Description</strong>
													</div>
													<small>Size: @BTFileService.FormatFileSize(item.FileData!.Length) </small>
												</div>
											</div>
										}
									</div>
								</div>

							</div>
							<div class="card-footer">
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="col-md-4 col mt-5 ">
				<div class="bg-dark">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>History</h2>
							<hr />
						</div>
						<div class="card-body" style="overflow-y:auto;height:1000px;background-color:antiquewhite">
							@*Loop to show the history entries for the Ticket*@
							@*GetProjectTicketsHistoriesAsync(Model.Id, Model.CompanyId))*@
							@foreach (TicketHistory history in Model.History.OrderBy(h => h.DateCreated))
							{
								<div class="">
									<span class="date" style="font-weight:bold">@history.DateCreated.ToString("dd MMM yyyy")</span>
									<h6>@history.Description</h6>
									<span>By: <a href="" title="@history.User!.FullName">@history.User.FullName</a></span>
									<div class="">
										@if (history.Description!.Contains("New Ticket Created"))
										{
											<p>A ticket was added.</p>
										}
										else if (history.PropertyName!.Equals("TicketComment") || history.PropertyName.Equals("TicketAttachment"))
										{
											<p>A <b>@history.PropertyName</b>  was added.</p>
										}
										else
										{
											<p>The ticket <b>@history.PropertyName</b>  was edited</p>
											<p>@($"Previous {history.PropertyName}:  ") <span style="color:red">@history.OldValue</span></p>
											<p>@($"Current {history.PropertyName}:  ") <span style="color:green">@history.NewValue</span></p>
										}
									</div>
								</div>
								<hr />
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@*<h1>Details</h1>

<div>
    <h4>Ticket</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LastUpdated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LastUpdated)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Archived)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Archived)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ArchivedByProject)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ArchivedByProject)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Project)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Project.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TicketPriority)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TicketPriority.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TicketType)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TicketType.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TicketStatus)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TicketStatus.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DeveloperUser)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DeveloperUser.Id)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SubmitterUser)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SubmitterUser.Id)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="AllTickets">Back to List</a>
</div>
*@